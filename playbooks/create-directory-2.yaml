-
  name: Create a directory app-conf in the $HOME/app/conf directory
  hosts: webserver
  tasks:
    #- name: Install tools
    #  apt: name={{item}} state=present update_cache=yes
    #  with_items:
    #    - python-lxml
    - name: Ensure a configuration directory exists in $HOME/app
      file:
        path: $HOME/app/conf
        state: directory

    - name: create multiple directory in the $HOME
      file:
        path: "$HOME/{{item}}"
        state: directory
      loop:
        - app/conf
        - app/source
        - app/meta-inf

    - name : remove multiple directories created in the step above
      file:
        path: "$HOME/{{item}}"
        state: absent
      loop:
        - app/source
        - app/meta-inf

    - name: Copy File
      copy:
        src:  purchaseOrder.xml
        dest: $HOME/app/conf/purchaseOrder.xml

    - name: Read the xml file
      xml:
        path: $HOME/app/conf/purchaseOrder.xml
        xpath: /PurchaseOrders/PurchaseOrder/Items/Item
        content: text
      register: hits
    - debug:
        var: hits

    - name: Read the xml file for the Items
      xml:
        path: $HOME/app/conf/purchaseOrder.xml
        xpath: /PurchaseOrders/PurchaseOrder/Items/Item
        content: attribute
        attribute: PartNumber
      register: xmlresp

    - debug:
        var : xmlresp

    - name: Storing the content of the file
      set_fact:
        fileNameList: "{{xmlresp.matches}}"

    - debug:
        var: fileNameList


    - name: Record Files to look up for the tokens
      debug: var=xmlresp.matches[{{ item }}].Item.PartNumber
      with_sequence: start=0 end={{xmlresp.matches | length -1}}

    #- debug: var=filenames

    - name: Copy the file
      copy:
        dest: $HOME/app/conf/configFiles.txt
        #content: "Jai Ganesh Ji Maharaj Ki Jai"
        content: "{{item.Item.PartNumber}}"
      loop: "{{xmlresp.matches}}"
      #with_sequence: start=0 end={{xmlresp.matches | length -1}}

    - name: Create a file which contain list of all the parsed files
      lineinfile: path=/home/LDC/ansible-inventory-check/conf/input.txt line={{item.Item.PartNumber}} create=yes state=present
      loop: "{{xmlresp.matches}}"



